package algoritmoprocesos;
import java.awt.Color;
import javax.swing.JOptionPane;
import java.security.SecureRandom;
import javax.swing.ImageIcon;
/**
 *
 * @author JNLD - 0901-18-735
 */
public class Algoritmos extends javax.swing.JFrame {
    /**
     * Creates new form Algoritmos
     */
    public Algoritmos() {
        initComponents();
        CPU.setIcon(new ImageIcon("amd.jpg"));
        //https://www.it-swarm.dev/es/java/java-como-agregar-una-imagen-jlabel/971051297/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabConfig = new javax.swing.JLabel();
        LabCantP = new javax.swing.JLabel();
        comboCant = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        consola = new javax.swing.JTextArea();
        LabOpAlgo = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        exitt = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        AlgoLifo = new javax.swing.JButton();
        AlgoFifo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        P1 = new javax.swing.JTextField();
        P2 = new javax.swing.JTextField();
        P3 = new javax.swing.JTextField();
        P4 = new javax.swing.JTextField();
        P5 = new javax.swing.JTextField();
        P6 = new javax.swing.JTextField();
        P7 = new javax.swing.JTextField();
        P8 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        E1 = new javax.swing.JTextField();
        E2 = new javax.swing.JTextField();
        E3 = new javax.swing.JTextField();
        E4 = new javax.swing.JTextField();
        E5 = new javax.swing.JTextField();
        E6 = new javax.swing.JTextField();
        E7 = new javax.swing.JTextField();
        E8 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        enEje = new javax.swing.JLabel();
        prog = new javax.swing.JProgressBar();
        CPU = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        completados = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritmos_Procesos");
        setBackground(new java.awt.Color(204, 204, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(720, 530));
        setPreferredSize(new java.awt.Dimension(720, 530));
        setResizable(false);

        LabConfig.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LabConfig.setText("Configuraciones");
        LabConfig.setName(""); // NOI18N

        LabCantP.setText("Cantidad de procesos");

        comboCant.setBackground(new java.awt.Color(51, 51, 255));
        comboCant.setForeground(new java.awt.Color(204, 204, 204));
        comboCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "4", "5", "6", "7", "8" }));
        comboCant.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboCant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCantActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(153, 0, 153));

        consola.setEditable(false);
        consola.setBackground(new java.awt.Color(0, 0, 0));
        consola.setColumns(20);
        consola.setFont(new java.awt.Font("Consolas", 0, 13)); // NOI18N
        consola.setForeground(new java.awt.Color(0, 204, 0));
        consola.setLineWrap(true);
        consola.setRows(5);
        consola.setWrapStyleWord(true);
        consola.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consolaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(consola);

        LabOpAlgo.setText("Opciones - Algoritmos de procesamiento");

        reset.setBackground(new java.awt.Color(255, 153, 0));
        reset.setText("Reiniciar");
        reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        exitt.setBackground(new java.awt.Color(255, 51, 51));
        exitt.setText("Salir");
        exitt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exittActionPerformed(evt);
            }
        });

        AlgoLifo.setBackground(new java.awt.Color(102, 153, 0));
        AlgoLifo.setText("LIFO");
        AlgoLifo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AlgoLifo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlgoLifoActionPerformed(evt);
            }
        });

        AlgoFifo.setBackground(new java.awt.Color(153, 102, 0));
        AlgoFifo.setText("FIFO - FCFS");
        AlgoFifo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AlgoFifo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlgoFifoActionPerformed(evt);
            }
        });

        jLabel1.setText("Jaime Noel López Daniel");

        jLabel2.setText("0901-18-735");

        P1.setEditable(false);
        P1.setBackground(new java.awt.Color(102, 153, 255));

        P2.setEditable(false);
        P2.setBackground(new java.awt.Color(102, 153, 255));

        P3.setEditable(false);
        P3.setBackground(new java.awt.Color(102, 153, 255));

        P4.setEditable(false);
        P4.setBackground(new java.awt.Color(102, 153, 255));

        P5.setEditable(false);
        P5.setBackground(new java.awt.Color(102, 153, 255));

        P6.setEditable(false);
        P6.setBackground(new java.awt.Color(102, 153, 255));

        P7.setEditable(false);
        P7.setBackground(new java.awt.Color(102, 153, 255));

        P8.setEditable(false);
        P8.setBackground(new java.awt.Color(102, 153, 255));

        jLabel3.setText("1");

        jLabel4.setText("2");

        jLabel5.setText("Procesos");

        jLabel6.setText("3");

        jLabel7.setText("4");

        jLabel8.setText("5");

        jLabel9.setText("6");

        jLabel10.setText("7");

        jLabel11.setText("8");

        jLabel12.setText("Estado");

        E1.setEditable(false);
        E1.setText("--");

        E2.setEditable(false);
        E2.setText("--");

        E3.setEditable(false);
        E3.setText("--");

        E4.setEditable(false);
        E4.setText("--");

        E5.setEditable(false);
        E5.setText("--");

        E6.setEditable(false);
        E6.setText("--");

        E7.setEditable(false);
        E7.setText("--");

        E8.setEditable(false);
        E8.setText("--");

        jLabel13.setText("Estados:");

        jLabel14.setText("Listo para ejecución");

        jLabel15.setText("Bloqueado");

        jLabel16.setText("Ejecutando");

        jLabel17.setText("Terminado (Completado)");

        jLabel18.setText("Ejecutando: ");

        enEje.setText("--");

        prog.setBackground(new java.awt.Color(204, 255, 255));
        prog.setForeground(new java.awt.Color(0, 153, 0));
        prog.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        prog.setFocusable(false);

        CPU.setText("CPU");
        CPU.setMaximumSize(new java.awt.Dimension(200, 120));

        completados.setEditable(false);
        completados.setBackground(new java.awt.Color(0, 0, 255));
        completados.setColumns(15);
        completados.setForeground(new java.awt.Color(204, 204, 204));
        completados.setRows(5);
        completados.setTabSize(7);
        jScrollPane2.setViewportView(completados);

        jLabel19.setText("Procesos completados");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(jLabel19)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(LabConfig)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(LabCantP)
                                        .addGap(18, 18, 18)
                                        .addComponent(comboCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(reset)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(exitt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jSeparator1))
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(AlgoFifo)
                                        .addGap(43, 43, 43)
                                        .addComponent(AlgoLifo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(LabOpAlgo))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(P2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(P1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(P3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(P4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(P6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(P7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(P8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14)
                                    .addComponent(P5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(E1, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                                    .addComponent(E2)
                                                    .addComponent(E3)
                                                    .addComponent(E4)
                                                    .addComponent(E5)
                                                    .addComponent(E7)
                                                    .addComponent(E6)
                                                    .addComponent(E8))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(31, 31, 31)
                                                        .addComponent(prog, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(40, 40, 40)
                                                        .addComponent(jLabel18)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(enEje, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(CPU, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel16))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LabConfig)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LabCantP)
                            .addComponent(comboCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LabOpAlgo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reset)
                            .addComponent(exitt)
                            .addComponent(AlgoFifo)
                            .addComponent(AlgoLifo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(CPU, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel18)
                                            .addComponent(enEje))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(prog, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(P1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3)
                                            .addComponent(E1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(P2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)
                                            .addComponent(E2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(P3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6)
                                            .addComponent(E3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(P4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(E4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(P5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(E5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(P6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(E6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(P7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(E7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(P8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(E8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11))
                                .addGap(12, 12, 12)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel17)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(1, 1, 1)))))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String[] procesos = new String[8];
    int[] porcentajes = new int[8];
    int maximotiempo = 500;
    int cantProce = 0;
    private void consolaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consolaMouseClicked
        
    }//GEN-LAST:event_consolaMouseClicked

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        completados.setText("");
        AlgoLifo.setEnabled(true);
        AlgoFifo.setEnabled(true);
        comboCant.setEnabled(true);
        consola.setText("");
        limpiaBarra();
        limpiarPE();
    }//GEN-LAST:event_resetActionPerformed

    private void exittActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exittActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Confirme su salida", "¿Desea Salir?",
                JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE)==JOptionPane.YES_OPTION){
            this.dispose();
        }
    }//GEN-LAST:event_exittActionPerformed

    private void AlgoFifoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlgoFifoActionPerformed
        new Thread (new HiloFifo()).start();
    }//GEN-LAST:event_AlgoFifoActionPerformed
    
    private void actualizaEstado(int proActual, String estado){
        switch(proActual){
            case 1:
                E1.setText(estado);
                break;
            case 2:
                E2.setText(estado);
                break;
            case 3:
                E3.setText(estado);
                break;
            case 4:
                E4.setText(estado);
                break;
            case 5:
                E5.setText(estado);
                break;
            case 6:
                E6.setText(estado);
                break;
            case 7:
                E7.setText(estado);
                break;
            case 8:
                E8.setText(estado);
                break;
                
        }
    }
    
    private void comboCantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCantActionPerformed
        consola.setText("");
        limpiaBarra();
        escribeProcesos();
        CalculaTiempoProcesos();
        //https://www.lawebdelprogramador.com/foros/Java/1052546-como-tomar-un-valor-de-un-jcombobox.html
    }//GEN-LAST:event_comboCantActionPerformed

    private void AlgoLifoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlgoLifoActionPerformed
        new Thread (new HiloLifo()).start();
    }//GEN-LAST:event_AlgoLifoActionPerformed

    private void escribeProcesos(){//Define los procesos que usaremos
        new Thread(new HiloProcesos()).start();
    }
    public void CalculaTiempoProcesos(){
        //limpio el arreglo
        for(int j =0; j<8;j++){
            porcentajes[j]=-1;//indica que no esta definido
        }
        SecureRandom azar = new SecureRandom();
        int var = comboCant.getSelectedIndex();
        int cantProcesos = var+3;
        for(int i =0; i<cantProcesos;i++){
            porcentajes[i]=azar.nextInt((maximotiempo/10))*10+100;
        }
    }
    public void limpiaBarra(){
        prog.setString("--");
        prog.setStringPainted(true);
        prog.setValue(0);
        //https://www.geeksforgeeks.org/java-swing-jprogressbar/
    }
    public void llenaBarra(int barras){
        
        prog.setValue((barras)*10);
        prog.setString("--");
        if(barras==0)
            return;
        //si son 0 no pinta nada
        
        prog.setString("10%");
        if(barras==1)
            return;//se regresa en 1
        
        prog.setString("20%");
        if(barras==2)
            return;
        
        prog.setString("30%");
        if(barras==3)
            return;
        
        prog.setString("40%");
        if(barras==4)
            return;
        
        prog.setString("50%");
        if(barras==5)
            return;
        
        prog.setString("60%");
        if(barras==6)
            return;
        
        prog.setString("70%");
        if(barras==7)
            return;
        
        prog.setString("80%");
        if(barras==8)
            return;
        prog.setString("90%");
        
        if(barras==9)
            return;
        
        prog.setString("100%");
    }
    private void limpiarPE(){
        E1.setText("--");E2.setText("--");E3.setText("--");E4.setText("--");
        E5.setText("--");E6.setText("--");E7.setText("--");E8.setText("--");
        P1.setText("--");P2.setText("--");P3.setText("--");P4.setText("--");
        P5.setText("--");P6.setText("--");P7.setText("--");P8.setText("--");
        for(int i =0;i<8;i++){
            procesos[i]="-";
        }
    }
    
    private class HiloFifo implements Runnable{
        @Override 
        public void run(){
            AlgoLifo.setEnabled(false);
            comboCant.setEnabled(false);
            int procesoActual = 0;
            int ptDiez = 0;
            int progreso = 0;
            int ptDiez2=0;
            consola.append("\nAlgoritmo FIFO-FCFS iniciado\n\n");
            for(int i =0; i<cantProce;i++){
                procesoActual=(i+1);
                enEje.setText(procesos[i]);//dice que proceso esta ejecutandose
                progreso =0;
            
                consola.setText("Proceso "+procesoActual+" en ejecución\n\n");
                actualizaEstado(procesoActual,"Ejecución");
            
                ptDiez2=0;
                while(progreso!=porcentajes[i]){
                
                    progreso++;
                
                    if(progreso%(porcentajes[i]/10)==0){
                        ptDiez2++;
                        consola.append("Progreso: "+ptDiez2+"/10"+"\n");
                        llenaBarra(ptDiez2);
                        try{
                            Thread.sleep(porcentajes[i]+300);
                        }
                        catch(Exception e){}
                    }
                }
                porcentajes[i]=0;
                actualizaEstado(procesoActual,"Terminado");
                completados.append((i+1)+") "+procesos[i]+"\n");
                limpiaBarra();
            }
            consola.append("\nAlgoritmo FIFO-FCFS terminado");
        }
    }
    private class HiloLifo implements Runnable{
        @Override 
        public void run(){
            comboCant.setEnabled(false);
            AlgoFifo.setEnabled(false);
            int procesoActual = 0;
            int ptDiez = 0;
            int progreso = 0;
            int ptDiez2=0;
            int j=0;
            consola.append("\nAlgoritmo Lifo iniciado\n");
            for(int i =(cantProce-1); i>=0;i--){
                procesoActual=(i+1);
                j++;
                enEje.setText(procesos[i]);//dice que proceso esta ejecutandose
                progreso =0;

                consola.setText("Proceso "+procesoActual+" en ejecución\n\n");
                actualizaEstado(procesoActual,"Ejecución");

                ptDiez2=0;
                while(progreso!=porcentajes[i]){

                    progreso++;

                    if(progreso%(porcentajes[i]/10)==0){
                        ptDiez2++;
                        consola.append("Progreso: "+ptDiez2+"/10"+"\n");
                        llenaBarra(ptDiez2);
                        try{
                            Thread.sleep(porcentajes[i]+300);
                        }
                        catch(Exception e){}
                    }
                }
                porcentajes[i]=0;
                actualizaEstado(procesoActual,"Terminado");
                completados.append((j)+") "+procesos[i]+"\n");
                limpiaBarra();
            }
            consola.append("\nAlgoritmo LIFO terminado\n");
        }
    }
    private class HiloProcesos implements Runnable{
        @Override
        public void run(){
            int var = comboCant.getSelectedIndex();
            int cantProcesos = var+3;
            cantProce=cantProcesos;
            consola.append("Agregando procesos\n");
            try{
                Thread.sleep(500);
            }catch(Exception e){}
            consola.append(cantProcesos+" procesos agregados\n");
            //cantidad de procesos seleccionada
            limpiarPE();
            P1.setText("Proceso A");
            procesos[0]="Proceso A";
            E1.setText("Listo");
            try{
                Thread.sleep(300);
            }catch(Exception e){}
            P2.setText("Proceso B");
            procesos[1]="Proceso B";
            E2.setText("Listo");
            try{
                Thread.sleep(300);
            }catch(Exception e){}
            P3.setText("Proceso C");
            procesos[2]="Proceso C";
            E3.setText("Listo");
            try{
                Thread.sleep(300);
            }catch(Exception e){}
            if(cantProcesos ==3)
                return;//si fue 3 regresa
            P4.setText("Proceso D");
            procesos[3]="Proceso D";
            E4.setText("Listo");
            try{
                Thread.sleep(300);
            }catch(Exception e){}
            if(cantProcesos ==4)
                return;//si fue 4 regresa
            P5.setText("Proceso E");
            procesos[4]="Proceso E";
            E5.setText("Listo");
            try{
                Thread.sleep(300);
            }catch(Exception e){}
            if(cantProcesos ==5)
                return;//si fue 5 regresa
            P6.setText("Proceso F");
            procesos[5]="Proceso F";
            E6.setText("Listo");
            try{
                Thread.sleep(300);
            }catch(Exception e){}
            if(cantProcesos ==6)
                return;//si fue 6 regresa
            P7.setText("Proceso G");
            procesos[6]="Proceso G";
            E7.setText("Listo");
            try{
                Thread.sleep(300);
            }catch(Exception e){}
            if(cantProcesos ==7)
                return;//si fue 7 regresa
            P8.setText("Proceso H");
            procesos[7]="Proceso H";
            E8.setText("Listo");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Algoritmos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Algoritmos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Algoritmos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Algoritmos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Algoritmos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AlgoFifo;
    private javax.swing.JButton AlgoLifo;
    private javax.swing.JLabel CPU;
    private javax.swing.JTextField E1;
    private javax.swing.JTextField E2;
    private javax.swing.JTextField E3;
    private javax.swing.JTextField E4;
    private javax.swing.JTextField E5;
    private javax.swing.JTextField E6;
    private javax.swing.JTextField E7;
    private javax.swing.JTextField E8;
    private javax.swing.JLabel LabCantP;
    private javax.swing.JLabel LabConfig;
    private javax.swing.JLabel LabOpAlgo;
    private javax.swing.JTextField P1;
    private javax.swing.JTextField P2;
    private javax.swing.JTextField P3;
    private javax.swing.JTextField P4;
    private javax.swing.JTextField P5;
    private javax.swing.JTextField P6;
    private javax.swing.JTextField P7;
    private javax.swing.JTextField P8;
    private javax.swing.JComboBox<String> comboCant;
    private javax.swing.JTextArea completados;
    private javax.swing.JTextArea consola;
    private javax.swing.JLabel enEje;
    private javax.swing.JButton exitt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JProgressBar prog;
    private javax.swing.JButton reset;
    // End of variables declaration//GEN-END:variables
}
